server {
    # Custom variables set from system variables
    set_by_lua $site_name 'return os.getenv("APP")';

    # We listen on 8080 so we can run as a non-root user
    listen 8080 default_server;
    server_name  _;
    root /app/public;

    add_header x-nhsla-pod $hostname;
    add_header x-nhsla-site $site_name;

    index index.php index.html index.htm;

    # PHP files to PHP
	location ~ \.php$ {
		try_files $uri $uri/ /index.php?$query_string =404;
		include fastcgi_params;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_pass 127.0.0.1:9000;
		fastcgi_param SERVER_NAME $http_host;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param SCRIPT_NAME $fastcgi_script_name;
		fastcgi_index index.php;
		fastcgi_buffers 8 256k;
		fastcgi_busy_buffers_size 288k;
		fastcgi_buffer_size 32k;
		fastcgi_read_timeout 30s;
		fastcgi_request_buffering off;
		fastcgi_param PHP_VALUE "atatus.enabled=on;";
	}

    # Liveness & ReadinessProbe checks
	location ~ ^/(healthz)$ {
	    content_by_lua_block {
		    ngx.status = 200
		    ngx.header['Content-Type'] = 'text/plain'
		    ngx.say("OK")
		    ngx.exit(ngx.OK)
	    }
	    access_log off;
	}

	error_page 403 /403.html;
	error_page 404 /404.html;
	error_page 500 /500.html;
	error_page 502 /502.html;
	error_page 504 /504.html;
	location = /403.html {
    	root /usr/local/openresty/nginx/html;
    	internal;
    }
    location = /404.html {
    	root /usr/local/openresty/nginx/html;
    	internal;
    }
    location = /500.html {
    	root /usr/local/openresty/nginx/html;
    	internal;
    }
    location = /502.html {
    	root /usr/local/openresty/nginx/html;
    	internal;
    }
    location = /504.html {
    	root /usr/local/openresty/nginx/html;
    	internal;
    }

    # Block access to dot files except the .well-known directory
	location ~* /\.(?!well-known\/) {
        deny all;
		return 404;
    }

	# Unlikely to have these but block access to certain filetypes
	location ~* (?:\.(?:bak|dist|conf|yaml|yml|cfg|fla|in[ci]|log|psd|sh|sql)|~)$ {
        deny all;
		return 404;
    }

	# Block access to composer files
	location ~* composer\.(?:json|lock) {
        deny all;
		return 404;
    }

	# Block certain directories
	location ~* (vendor|behat|node_modules|readme(.*)|README|(.*).md|upgrade.txt|UPGRADE|phpunit.xml) {
        deny all;
        return 404;
	}
}
