worker_processes auto;
daemon off;
error_log /dev/stderr warn;
pcre_jit on;
pid /nhsla/etc/nginx.pid;

env SITE_NAME;

events {
    worker_connections 1024;
    multi_accept off;
    accept_mutex off;
}

http {
    # Move folders to writable storage
    client_body_temp_path /tmp/openresty/nginx-client-body;
    proxy_temp_path /tmp/openresty/nginx-proxy;
    fastcgi_temp_path /tmp/openresty/nginx-fastcgi;
    uwsgi_temp_path /tmp/openresty/nginx-uwsgi;
    scgi_temp_path /tmp/openresty/nginx-scgi;

    aio threads;

    # Fix broken uploads
    client_body_buffer_size 16k;
    client_body_in_file_only off;
    client_body_in_single_buffer off;

    # Includes mapping of file name extensions to MIME types of responses
    # and defines the default type.
    include mime.types;
    default_type application/octet-stream;

    # Don't tell version info to clients
    server_tokens off;

    # Specifies the maximum accepted body size of a client request, as
    # indicated by the request header Content-Length. If the stated content
    # length is greater than this size, then the client receives the HTTP
    # error code 413. Set to 0 to disable.
    client_max_body_size 1024m;

    # Timeout for keep-alive connections. Server will close connections after
    # this time.
    keepalive_timeout 120;
    keepalive_requests 20000;

    # Large cookies/header
    client_header_buffer_size 8k;
    large_client_header_buffers 8 128k;

    # Sendfile copies data between one FD and other from within the kernel,
    # which is more efficient than read() + write().
    sendfile off;

    # Don't buffer data-sends (disable Nagle algorithm).
    # Good for sending frequent small bursts of data in real time.
    tcp_nodelay on;

    # Causes nginx to attempt to send its HTTP response head in one packet,
    # instead of using partial frames.
    tcp_nopush on;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_static off;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    log_format kubernetes $time_local ' From: ' $http_x_forwarded_for ' Request: ' $request_method ' ' $http_x_forwarded_proto '://' $host $request_uri ' Response: HTTP Code: ' $status ' Bytes Sent: ' $bytes_sent ' Time: ' $request_time;
    # Sets the path, format, and configuration for a buffered log write.
    access_log /dev/stdout kubernetes;

    include site.conf;
}
